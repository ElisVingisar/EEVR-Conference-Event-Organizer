name: Next.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]  # Specify Node.js versions to test against

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Step 3: Cache node_modules and .next/cache
      - name: Cache node_modules and Next.js cache
        uses: actions/cache@v4
        with:
          # Cache the npm directory and Next.js build cache
          path: |
            ~/.npm
            realiti-express-main/.next/cache
          # Use package-lock.json and source files to create a unique cache key
          key: ${{ runner.os }}-nextjs-${{ hashFiles('realiti-express-main/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # Restore keys if source files change but dependencies remain the same
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('realiti-express-main/package-lock.json') }}-

      # Step 4: Install dependencies using npm ci
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        working-directory: realiti-express-main

      # Step 5: Build the Next.js app
      - name: Build the app
        run: npm run build
        working-directory: realiti-express-main

      # Step 6: Start the application
      - name: Start the application
        run: npm run start &  # Start your application in the background
        working-directory: realiti-express-main

      # Step 7: Wait for the application to start running
      - name: Wait for the application to start
        run: npx wait-on http://localhost:3000  # Wait until the application is available
        working-directory: realiti-express-main 

      # Step 8: Run tests
      - name: Run Cypress tests
        run: npm run test  # This should match the script defined in package.json
        working-directory: realiti-express-main

      # Step 9: Upload build artifacts (optional)
      - name: Upload production build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nextjs-build
          path: .next
